---
layout: post
status: publish
title: 'Microsoft .Net Framework Public Classes Data Dump'
slug: Microsoft-Net-Framework-Public-Classes-Data-Dump
---
# Microsoft .Net Framework Public Classes Data Dump
##

I've wrapped up work on <a href="http://codeimpossible.com/jsoq">v0.4 of the Jsoq Console</a>, and the insanely strenuous release cycle for v0.1 of <a href="http://whatdidijusteat.com">WhatDidIJustEat.com</a> so I'm starting another side project tonight.

Ever been working with a programming language you're not 100% familiar with and find yourself wondering:

<em>Is this function a built-in function or in some included library?<br />
What assembly is this class in again?<br />
Can I name my class XXXX without conflicting with another class?<br /></em>

I've had these questions recently and found myself annoyed and frustrated to no end (PHP, I'm looking at you) so I've decided to build a system to keep track of this stuff for me :D.

The first thing on my list (because it was the easiest) was to do a data dump of all the public classes in the .Net Framework, including the ones in my GAC, and store some metadata for each one in a database table. I've just finished this step and thought that this data might be useful, so I'm posting it here.

Currently the fields included in the data dump are:

<code>
[namespace] = The namespace that the class exists in (ex: System.Collections.Generic)
[class_name] = The name of the class (ex: StringBuilder)
[assembly_fullname] = The display name of the assembly (ex: mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089)
[assembly_file] = The full file path to the assembly (ex: C:\Windows\Microsoft.NET\Framework\v2.0.50727\System.dll)
[framework_name] = The framework that uses this class, for this dump they will all be 'Microsoft .Net'
[framework_version] = The framework version that uses this class (ex: v.2.0.50727)
</code>

The .sql file takes about 18 seconds to run to completion on my AMD Athlon X2 2.53ghz machine with 4gb of RAM.

If you're curious about how I generated the .sql file, below is the code I used to find all the classes. It's not pretty but then again it was just meant to get the data into the database. Just paste the code into a new console app and run it in a command window like so:

<code> [application_name].exe &gt; c:\classes.sql</code>

Or, you can <a href="http://www.box.net/shared/u8vsuy9lz1">download the .sql file I've generated</a> (it will also create the table you need to store the data).

<pre class="prettyprint"><code>
static void Main(string[] args)
{
	var dictionary = new Dictionary&lt;string, string&gt;(){
		{ "v2.0.50727", @"C:\Windows\Microsoft.NET\Framework\v2.0.50727" },
		{ "v3.0", @"C:\Windows\Microsoft.NET\Framework\v3.0" },
		{ "v3.5", @"C:\Windows\Microsoft.NET\Framework\v3.5" },
		{ "v???", @"c:\windows\assembly\gac" }
	};

	var types = new List&lt;Type&gt;();


	foreach (var pair in dictionary)
	{
		var path = pair.Value;

		var assemblies = Directory.GetFiles(path, "*.dll", SearchOption.AllDirectories);

		foreach (string file in assemblies)
		{
			try
			{
				Assembly asm = Assembly.LoadFile(file);

				foreach (Type t in asm.GetTypes())
				{
					if (t.IsPublic)
					{
						Console.WriteLine(String.Format(
							"INSERT INTO Classes (" +
								"[namespace], " +
								"class_name, " +
								"assembly_fullname, " +
								"assembly_file, " +
								"framework_name, " +
								"framework_version" +
							") " +
							"VALUES (" +
								"'{0}', " +
								"'{1}', " +
								"'{2}', " +
								"'{3}', " +
								"'Microsoft .Net', " +
								"'{4}'" +
							")",
							String.IsNullOrEmpty(t.Namespace) ?
								"GLOBAL" :
								t.Namespace,
							t.Name
								.Replace("`1", "&lt;T&gt;")
								.Replace("`2", "&lt;T1,T2&gt;")
								.Replace("`3", "&lt;T1,T2,T3&gt;"),
							t.Assembly.FullName,
							t.Assembly.Location,
							pair.Key == "v???" ?
								t.Assembly.GetName().Version.ToString() :
								pair.Key
						));
					}
				}
			}
			catch { }
		}
	}
}
</code></pre>

If you found this useful, let me know in the comments!
